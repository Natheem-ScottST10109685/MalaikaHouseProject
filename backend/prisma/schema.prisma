generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  emailVerified DateTime?
  passwordHash  String
  // enums not supported on SQL Server via Prisma → use String
  role          String   @default("PARENT") // "ADMIN" | "PARENT" | "PARTNER" | "STAFF"
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  sessions      Session[]
}

model Session {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshTokenHash String   @unique
  ip               String?
  userAgent        String?
  expiresAt        DateTime
  createdAt        DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid())
  title     String
  message   String
  // enums not supported → String with default
  severity  String   @default("INFO") // "INFO" | "WARNING" | "ERROR"
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model ActivityLog {
  id         String   @id @default(cuid())
  actorId    String?
  actorRole  String?            // was Role?
  actorEmail String?
  action     String
  targetType String?
  targetId   String?

  // Prisma Json not supported on SQL Server → store as JSON string
  // Optionally add @db.NVarChar(4000) or @db.NVarCharMax if needed
  metadata   String?            // JSON string

  ip         String?
  userAgent  String?
  status     String   @default("SUCCESS")
  createdAt  DateTime @default(now())
}

model IntegrationCredential {
  id           String   @id @default(cuid())
  provider     String
  accountRef   String?
  accessToken  String?
  refreshToken String?
  expiresAt    DateTime?

  // Prisma Json not supported → JSON string
  meta         String?          // JSON string

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}