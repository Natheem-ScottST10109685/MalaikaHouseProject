generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  emailVerified DateTime?
  passwordHash String
  role Role @default(PARENT)
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions Session[]
}

model Session {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshTokenHash String   @unique
  ip String?
  userAgent String?
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  PARENT
  PARTNER
  STAFF
}

model Notification {
  id String @id @default(cuid())
  title String
  message String
  severity Severity @default(INFO)
  read Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum Severity {
  INFO
  WARNING
  ERROR
}

model ActivityLog {
  id String @id @default(cuid())
  actorId String?
  actorRole Role?
  actorEmail String?
  action String
  targetType String?
  targetId String?
  metadata Json?
  ip String?
  userAgent String?
  status String @default("SUCCESS")
  createdAt DateTime @default(now())
}

model IntegrationCredential {
  id String @id @default(cuid())
  provider String
  accountRef String?
  accessToken String?
  refreshToken String?
  expiresAt DateTime?
  meta Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}